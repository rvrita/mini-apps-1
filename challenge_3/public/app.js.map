{"version":3,"sources":["../client/app.jsx"],"names":["Form1","props","state","valueName","valueEmail","valuePassword","handleInputChange","bind","e","name","target","setState","value","switchForm","formValue","React","Component","Form2","valueLine1","valueLine2","valueCity","valueState","valueZip","valuePhone","Form3","valueCreditCard","valueExpDate","valueCVV","valueBillingZip","CheckoutPage","CheckoutApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"app.js","sourcesContent":["class Form1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueName: '',\n      valueEmail: '',\n      valuePassword: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  // updates the value of the input field in the state\n  handleInputChange(e) {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"text\">Please provide name, email and password:</p>\n      <form onSubmit={(e) => this.props.switchForm(this.props.formValue)}>\n        <label>\n          Name: <input type=\"text\" value={this.state.valueName} name=\"valueName\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Email: <input type=\"text\" value={this.state.valueEmail} name=\"valueEmail\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Password: <input type=\"text\" value={this.state.valuePassword} name=\"valuePassword\" onChange={this.handleInputChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    )\n  }\n\n};\n\nclass Form2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueLine1: '',\n      valueLine2: '',\n      valueCity: '',\n      valueState: '',\n      valueZip: '',\n      valuePhone: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  // updates the value of the input field in the state\n  handleInputChange(e) {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"text\">Please provide address and phone number:</p>\n      <form onSubmit={(e) => this.props.switchForm(this.props.formValue)}>\n        <label>\n          Address: <input type=\"text\" value={this.state.valueLine1} name=\"valueLine1\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          <input type=\"text\" value={this.state.valueLine2} name=\"valueLine2\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          City: <input type=\"text\" value={this.state.valueCity} name=\"valueCity\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          State: <input type=\"text\" value={this.state.valueState} name=\"valueState\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Zip code: <input type=\"text\" value={this.state.valueZip} name=\"valueZip\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Phone number: <input type=\"text\" value={this.state.valuePhone} name=\"valuePhone\" onChange={this.handleInputChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      </div>\n    )\n  }\n\n};\n\nclass Form3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valueCreditCard: '',\n      valueExpDate: '',\n      valueCVV: '',\n      valueBillingZip: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  // updates the value of the input field in the state\n  handleInputChange(e) {\n    var name = e.target.name;\n    this.setState({ [name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <div>\n        <p className=\"text\">Please provide credit card information:</p>\n      <form onSubmit={(e) => this.props.switchForm(this.props.formValue)}>\n        <label>\n          Credit Card number: <input type=\"text\" value={this.state.valueCreditCard} name=\"valueCreditCard\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Expiration Date: <input type=\"text\" value={this.state.valueExpDate} name=\"valueExpDate\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          CVV: <input type=\"text\" value={this.state.valueCVV} name=\"valueCVV\" onChange={this.handleInputChange} />\n        </label>\n        <label>\n          Billing zip code: <input type=\"text\" value={this.state.valueBillingZip} name=\"valueBillingZip\" onChange={this.handleInputChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n      </div>\n    )\n  }\n\n};\n\nclass CheckoutPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Welcome to checkout app!</h1>\n        <p className=\"main-page\">Please click on the button.</p>\n        <button onClick={(e) => this.props.switchForm(this.props.formValue)}>\n          Checkout\n        </button>\n      </div>\n    );\n  }\n\n};\n\n\nclass CheckoutApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValue: props.formValue\n    }\n    this.switchForm = this.switchForm.bind(this);\n  }\n\n  switchForm(value) {\n    this.setState({\n      formValue: value\n    })\n  }\n\n  render() {\n    if (this.state.formValue === 0) {\n      return <CheckoutPage formValue={1} switchForm={this.switchForm}/>;\n    } else if (this.state.formValue === 1) {\n      return <Form1 formValue={2} switchForm={this.switchForm}/>;\n    } else if (this.state.formValue === 2) {\n      return <Form2 formValue={3} switchForm={this.switchForm}/>;\n    } else if (this.state.formValue === 3) {\n      return <Form3 formValue={0} switchForm={this.switchForm}/>;\n    }\n  }\n\n};\n\nReactDOM.render(\n  <CheckoutApp formValue={0} />,\n  document.getElementById('app')\n);"]}